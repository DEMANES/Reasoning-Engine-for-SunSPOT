<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="es">
<head>
<!-- Generated by javadoc (version 1.7.0_55) on Sat Jul 26 22:35:59 CEST 2014 -->
<title>ORAMediatorForSunSPOT (Cargo Monitoring Pilot. DEMANES Project (1.0))</title>
<meta name="date" content="2014-07-26">
<link rel="stylesheet" type="text/css" href="../../../../../../stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="ORAMediatorForSunSPOT (Cargo Monitoring Pilot. DEMANES Project (1.0))";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><em><b>DEMANES Power Scaling -- SPOT-side<br>v1.0</b></em></div>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/PowerTransmissionActuator.html" title="class in eu.artemis.demanes.impl.SunSPOT.reconfiguration"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../../index.html?eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html" target="_top">Frames</a></li>
<li><a href="ORAMediatorForSunSPOT.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<div class="subTitle">eu.artemis.demanes.impl.SunSPOT.reconfiguration</div>
<h2 title="Class ORAMediatorForSunSPOT" class="title">Class ORAMediatorForSunSPOT</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>eu.artemis.demanes.impl.SunSPOT.reconfiguration.ORAMediatorForSunSPOT</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd>eu.artemis.demanes.reconfiguration.ActionProvider, eu.artemis.demanes.reconfiguration.ActuatorRegistry, eu.artemis.demanes.reconfiguration.ObservationProvider, eu.artemis.demanes.reconfiguration.ObserverRegistry, eu.artemis.demanes.reconfiguration.ORAMediator</dd>
</dl>
<hr>
<br>
<pre>public class <span class="strong">ORAMediatorForSunSPOT</span>
extends java.lang.Object
implements eu.artemis.demanes.reconfiguration.ORAMediator, eu.artemis.demanes.reconfiguration.ActionProvider, eu.artemis.demanes.reconfiguration.ObservationProvider</pre>
<dl><dt><span class="strong">Author:</span></dt>
  <dd>Néstor Lucas Martínez <nestor.lucas@upm.es></dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#ORAMediatorForSunSPOT()">ORAMediatorForSunSPOT</a></strong>()</code>&nbsp;</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#ORAMediatorForSunSPOT(com.sun.spot.core.util.Properties)">ORAMediatorForSunSPOT</a></strong>(com.sun.spot.core.util.Properties&nbsp;properties)</code>&nbsp;</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.util.Vector</code></td>
<td class="colLast"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#getActions()">getActions</a></strong>()</code>
<div class="block">
 Query the Actions that can be invoked using this ActionProvider
 
 
 
 The ActionProvider.invoke(ANES_URN, ANES_BUNDLE) function requires a
 ANES_URN argument which identifies which action to invoke.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.util.Vector</code></td>
<td class="colLast"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#getObservations()">getObservations</a></strong>()</code>
<div class="block">
 Query the Observations that can be obtained from this ObservationProvider
 
 
 
 The ObservationProvider.getValue(ANES_URN) function requires a ANES_URN
 argument which identifies which observation to obtain.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>java.lang.Object</code></td>
<td class="colLast"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#getValue(eu.artemis.demanes.datatypes.ANES_URN)">getValue</a></strong>(eu.artemis.demanes.datatypes.ANES_URN&nbsp;id)</code>
<div class="block">
 Get the value of a specific Observation in order to monitor
 the system
 
 
 
 By calling this function, the user can specify that an Observation with a
 specific identifier should be invoked.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#invoke(eu.artemis.demanes.datatypes.ANES_URN, eu.artemis.demanes.datatypes.ANES_BUNDLE)">invoke</a></strong>(eu.artemis.demanes.datatypes.ANES_URN&nbsp;id,
      eu.artemis.demanes.datatypes.ANES_BUNDLE&nbsp;arguments)</code>
<div class="block">
 Invokes a specific Action in order to modify the system
 
 
 
 By calling this function, the user can specify that an Action with a
 specific identifier should be invoked.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#registerActuator(eu.artemis.demanes.reconfiguration.Actuator)">registerActuator</a></strong>(eu.artemis.demanes.reconfiguration.Actuator&nbsp;actuator)</code>
<div class="block">
 Add a Actuator object to the collection of actuators by
 which the ReasoningEngine can modify the system.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#registerObserver(eu.artemis.demanes.reconfiguration.Observer)">registerObserver</a></strong>(eu.artemis.demanes.reconfiguration.Observer&nbsp;observer)</code>
<div class="block">
 Add a Observer object to the collection of observers by
 which the ReasoningEngine can monitor the system.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#setReasoner(eu.artemis.demanes.reconfiguration.Reasoner)">setReasoner</a></strong>(eu.artemis.demanes.reconfiguration.Reasoner&nbsp;reasoner)</code>
<div class="block">
 Set an object with the Reasoner as the current reasoner.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#setTriggeringPolicy(eu.artemis.demanes.reconfiguration.TriggerPolicy)">setTriggeringPolicy</a></strong>(eu.artemis.demanes.reconfiguration.TriggerPolicy&nbsp;triggerPolicy)</code>
<div class="block">
 Set an object with the TriggerPolicy as the current
 triggering policy.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#unregisterActuator(eu.artemis.demanes.reconfiguration.Actuator)">unregisterActuator</a></strong>(eu.artemis.demanes.reconfiguration.Actuator&nbsp;actuator)</code>
<div class="block">
 Remove a Actuator object from the collection of actuators.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html#unregisterObserver(eu.artemis.demanes.reconfiguration.Observer)">unregisterObserver</a></strong>(eu.artemis.demanes.reconfiguration.Observer&nbsp;observer)</code>
<div class="block">
 Remove a Observer object from the collection of observers.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, toString, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="ORAMediatorForSunSPOT()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ORAMediatorForSunSPOT</h4>
<pre>public&nbsp;ORAMediatorForSunSPOT()</pre>
</li>
</ul>
<a name="ORAMediatorForSunSPOT(com.sun.spot.core.util.Properties)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>ORAMediatorForSunSPOT</h4>
<pre>public&nbsp;ORAMediatorForSunSPOT(com.sun.spot.core.util.Properties&nbsp;properties)</pre>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="setReasoner(eu.artemis.demanes.reconfiguration.Reasoner)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setReasoner</h4>
<pre>public&nbsp;void&nbsp;setReasoner(eu.artemis.demanes.reconfiguration.Reasoner&nbsp;reasoner)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code>eu.artemis.demanes.reconfiguration.ORAMediator</code></strong></div>
<div class="block"><p>
 Set an object with the Reasoner as the current reasoner.
 This reasoner object defines the behavior of the reconfiguration.
 </p>
 
 <p>
 There can only be one reasoner at a time, so if this function is called
 when another reasoner is set, this function overwrites it.
 </p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>setReasoner</code>&nbsp;in interface&nbsp;<code>eu.artemis.demanes.reconfiguration.ORAMediator</code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>reasoner</code> - an Object with the Reasoner specifying how the decisions
            should be made to reconfigure the system.</dd></dl>
</li>
</ul>
<a name="setTriggeringPolicy(eu.artemis.demanes.reconfiguration.TriggerPolicy)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTriggeringPolicy</h4>
<pre>public&nbsp;void&nbsp;setTriggeringPolicy(eu.artemis.demanes.reconfiguration.TriggerPolicy&nbsp;triggerPolicy)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code>eu.artemis.demanes.reconfiguration.ORAMediator</code></strong></div>
<div class="block"><p>
 Set an object with the TriggerPolicy as the current
 triggering policy. This policy object defines the when the
 reconfiguration reasoner should be triggered. For example if the reasoner
 should be triggered periodically or if a threshold is reached.
 </p>
 
 <p>
 There can only be one triggering policy at a time, so if this function is
 called when another triggering policy is set, this function overwrites
 it.
 </p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>setTriggeringPolicy</code>&nbsp;in interface&nbsp;<code>eu.artemis.demanes.reconfiguration.ORAMediator</code></dd>
</dl>
</li>
</ul>
<a name="getActions()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getActions</h4>
<pre>public&nbsp;java.util.Vector&nbsp;getActions()</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code>eu.artemis.demanes.reconfiguration.ActionProvider</code></strong></div>
<div class="block"><p>
 Query the Actions that can be invoked using this ActionProvider
 </p>
 
 <p>
 The ActionProvider.invoke(ANES_URN, ANES_BUNDLE) function requires a
 ANES_URN argument which identifies which action to invoke. By using this
 function the user gets an array which indicate what the relevant
 ANES_URNs can be used as a valid argument.
 </p>
 
 <p>
 If there are no possible actions that can be invokes, this function will
 return null.
 </p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>getActions</code>&nbsp;in interface&nbsp;<code>eu.artemis.demanes.reconfiguration.ActionProvider</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>an Array of ANES_URNs that can be invoked using this
         ActionProvider.</dd></dl>
</li>
</ul>
<a name="invoke(eu.artemis.demanes.datatypes.ANES_URN, eu.artemis.demanes.datatypes.ANES_BUNDLE)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>invoke</h4>
<pre>public&nbsp;void&nbsp;invoke(eu.artemis.demanes.datatypes.ANES_URN&nbsp;id,
          eu.artemis.demanes.datatypes.ANES_BUNDLE&nbsp;arguments)
            throws eu.artemis.demanes.exceptions.InexistentActionID,
                   eu.artemis.demanes.exceptions.ActionInvocationException</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code>eu.artemis.demanes.reconfiguration.ActionProvider</code></strong></div>
<div class="block"><p>
 Invokes a specific Action in order to modify the system
 </p>
 
 <p>
 By calling this function, the user can specify that an Action with a
 specific identifier should be invoked. This results internally in
 invoking the corresponding Action.
 </p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>invoke</code>&nbsp;in interface&nbsp;<code>eu.artemis.demanes.reconfiguration.ActionProvider</code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>id</code> - In order to resolve which Action to invoke, the identity of
            the corresponding Action should be provided. To obtain a list
            of available actions from this ActionProvider, use the
            ActionProvider.getActions() function.</dd><dd><code>arguments</code> - The arguments may indicate a specification of how the action
            should be invoked. For instance in order to modify a parameter
            of a component, the new parameter value can be one of the
            elements in the argument list.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>eu.artemis.demanes.exceptions.InexistentActionID</code> - If the provided id can not be resolved by the ActionProvider,
             an exception is thrown, indicating that the this identifier
             does not exist. (As far as this ActionProvider concerns)</dd>
<dd><code>eu.artemis.demanes.exceptions.ActionInvocationException</code> - Is thrown if the invoked action cannot successfully complete.</dd><dt><span class="strong">See Also:</span></dt><dd><code>Action.invoke(ANES_BUNDLE)</code></dd></dl>
</li>
</ul>
<a name="getObservations()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getObservations</h4>
<pre>public&nbsp;java.util.Vector&nbsp;getObservations()</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code>eu.artemis.demanes.reconfiguration.ObservationProvider</code></strong></div>
<div class="block"><p>
 Query the Observations that can be obtained from this ObservationProvider
 </p>
 
 <p>
 The ObservationProvider.getValue(ANES_URN) function requires a ANES_URN
 argument which identifies which observation to obtain. By using this
 function the user gets an array which indicate what the relevant
 ANES_URNs can be used as a valid argument.
 </p>
 
 <p>
 If there are no possible observations that can be obtained, this function
 will return null.
 </p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>getObservations</code>&nbsp;in interface&nbsp;<code>eu.artemis.demanes.reconfiguration.ObservationProvider</code></dd>
<dt><span class="strong">Returns:</span></dt><dd>Array of ANES_URN</dd></dl>
</li>
</ul>
<a name="getValue(eu.artemis.demanes.datatypes.ANES_URN)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getValue</h4>
<pre>public&nbsp;java.lang.Object&nbsp;getValue(eu.artemis.demanes.datatypes.ANES_URN&nbsp;id)
                          throws eu.artemis.demanes.exceptions.InexistentObservationID,
                                 eu.artemis.demanes.exceptions.ObservationInvocationException</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code>eu.artemis.demanes.reconfiguration.ObservationProvider</code></strong></div>
<div class="block"><p>
 Get the value of a specific Observation in order to monitor
 the system
 </p>
 
 <p>
 By calling this function, the user can specify that an Observation with a
 specific identifier should be invoked. This results internally in
 invoking the corresponding Observation.
 </p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>getValue</code>&nbsp;in interface&nbsp;<code>eu.artemis.demanes.reconfiguration.ObservationProvider</code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>id</code> - In order to resolve which Observation to invoke, the identity
            of the corresponding Observation should be provided. To obtain
            a list of available observations from this
            ObservationProvider, use the ObservationProvider.getObservations()
            function.</dd>
<dt><span class="strong">Throws:</span></dt>
<dd><code>eu.artemis.demanes.exceptions.InexistentObservationID</code> - If the provided id can not be resolved by the
             ObservationProvider, an exception is thrown, indicating that
             the this identifier does not exist. (As far as this
             ObservationProvider concerns)</dd>
<dd><code>eu.artemis.demanes.exceptions.ObservationInvocationException</code> - Is thrown if the observation cannot successfully obtain it's
             information.</dd><dt><span class="strong">See Also:</span></dt><dd><code>Observation.getValue()</code></dd></dl>
</li>
</ul>
<a name="registerObserver(eu.artemis.demanes.reconfiguration.Observer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>registerObserver</h4>
<pre>public&nbsp;void&nbsp;registerObserver(eu.artemis.demanes.reconfiguration.Observer&nbsp;observer)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code>eu.artemis.demanes.reconfiguration.ObserverRegistry</code></strong></div>
<div class="block"><p>
 Add a Observer object to the collection of observers by
 which the ReasoningEngine can monitor the system. If the observer has
 already been registered before, nothing changes.
 </p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>registerObserver</code>&nbsp;in interface&nbsp;<code>eu.artemis.demanes.reconfiguration.ObserverRegistry</code></dd>
</dl>
</li>
</ul>
<a name="unregisterObserver(eu.artemis.demanes.reconfiguration.Observer)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>unregisterObserver</h4>
<pre>public&nbsp;void&nbsp;unregisterObserver(eu.artemis.demanes.reconfiguration.Observer&nbsp;observer)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code>eu.artemis.demanes.reconfiguration.ObserverRegistry</code></strong></div>
<div class="block"><p>
 Remove a Observer object from the collection of observers.
 This function should be called before the observer is destroyed. If the
 object was not registered before, nothing happens.
 </p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>unregisterObserver</code>&nbsp;in interface&nbsp;<code>eu.artemis.demanes.reconfiguration.ObserverRegistry</code></dd>
</dl>
</li>
</ul>
<a name="registerActuator(eu.artemis.demanes.reconfiguration.Actuator)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>registerActuator</h4>
<pre>public&nbsp;void&nbsp;registerActuator(eu.artemis.demanes.reconfiguration.Actuator&nbsp;actuator)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code>eu.artemis.demanes.reconfiguration.ActuatorRegistry</code></strong></div>
<div class="block"><p>
 Add a Actuator object to the collection of actuators by
 which the ReasoningEngine can modify the system. If the actuator has
 already been registered before, nothing changes.
 </p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>registerActuator</code>&nbsp;in interface&nbsp;<code>eu.artemis.demanes.reconfiguration.ActuatorRegistry</code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>actuator</code> - the Actuator to register.</dd></dl>
</li>
</ul>
<a name="unregisterActuator(eu.artemis.demanes.reconfiguration.Actuator)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>unregisterActuator</h4>
<pre>public&nbsp;void&nbsp;unregisterActuator(eu.artemis.demanes.reconfiguration.Actuator&nbsp;actuator)</pre>
<div class="block"><strong>Description copied from interface:&nbsp;<code>eu.artemis.demanes.reconfiguration.ActuatorRegistry</code></strong></div>
<div class="block"><p>
 Remove a Actuator object from the collection of actuators.
 This function should be called before the actuator is destroyed. If the
 object was not registered before, nothing happens.
 </p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code>unregisterActuator</code>&nbsp;in interface&nbsp;<code>eu.artemis.demanes.reconfiguration.ActuatorRegistry</code></dd>
<dt><span class="strong">Parameters:</span></dt><dd><code>actuator</code> - the object that no longer can be used.</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../../../../overview-summary.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../../../../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../../../../index-all.html">Index</a></li>
<li><a href="../../../../../../help-doc.html">Help</a></li>
</ul>
<div class="aboutLanguage"><em><b>DEMANES Power Scaling -- SPOT-side<br>v1.0</b></em></div>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="../../../../../../eu/artemis/demanes/impl/SunSPOT/reconfiguration/PowerTransmissionActuator.html" title="class in eu.artemis.demanes.impl.SunSPOT.reconfiguration"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="../../../../../../index.html?eu/artemis/demanes/impl/SunSPOT/reconfiguration/ORAMediatorForSunSPOT.html" target="_top">Frames</a></li>
<li><a href="ORAMediatorForSunSPOT.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../../../../allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
